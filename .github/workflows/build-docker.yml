name: Build Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'dockerfiles/*/properties.yml'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          json: true
          quotepath: false
          files: |
            dockerfiles/*/properties.yml

      - name: Set Matrix
        id: set-matrix
        run: echo "matrix={\"files\":${{ steps.changed-files.outputs.all_changed_files }}}" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  docker-build:
    needs:
      - setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login To Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse properties.yml
        id: image-data
        run: |
          echo registry=$(yq -r .registry "${{ matrix.files }}") >> $GITHUB_OUTPUT
          echo repository=$(yq -r .repository "${{ matrix.files }}") >> $GITHUB_OUTPUT
          echo tag=$(yq -r .tag "${{ matrix.files }}") >> $GITHUB_OUTPUT
          echo appversion=$(yq -r .version "${{ matrix.files }}") >> $GITHUB_OUTPUT
          echo platforms=$(yq -r .platforms "${{ matrix.files }}") >> $GITHUB_OUTPUT
          echo contextpath=$(echo ${{ matrix.files }} | sed --expression "s/properties.yml//") >> $GITHUB_OUTPUT
          echo dockerfilepath=$(echo ${{ matrix.files }} | sed --expression "s/properties.yml/Dockerfile/") >> $GITHUB_OUTPUT

      - name: Build And Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.image-data.outputs.contextpath }}
          file: ${{ steps.image-data.outputs.dockerfilepath }}
          platforms: ${{ steps.image-data.outputs.platforms }}
          build-args: |
            APPVERSION=${{ steps.image-data.outputs.appversion }}
          push: true
          tags: ${{ steps.image-data.outputs.registry }}/${{ steps.image-data.outputs.repository }}:${{ steps.image-data.outputs.tag }},${{ steps.image-data.outputs.registry }}/${{ steps.image-data.outputs.repository }}:latest
