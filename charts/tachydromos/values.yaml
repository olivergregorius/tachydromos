# String to expand the chart name.
nameOverride: ""
# String to override the tachydromos.fullname template.
fullnameOverride: ""
# Docker registry secret names as an array.
imagePullSecrets: []

# Hostname of mail server.
# NOTE: Hostnames for webmail and rspamd may be defined independently.
hostname: mail.example.org

# LDAP configuration.
ldap:
  # Configuration for embedded OpenLDAP deployment.
  embedded:
    # Enable embedded OpenLDAP deployment (true, false).
    enabled: true
    image:
      # OpenLDAP image registry.
      registry: docker.io
      # OpenLDAP image repository.
      repository: bitnami/openldap
      # OpenLDAP image tag.
      tag: 2.6.6
      # OpenLDAP image pull policy (Never, Always, IfNotPresent).
      pullPolicy: IfNotPresent
    # Map of annotations to add to the pods.
    podAnnotations: {}
    # Pod security context configuration.
    podSecurityContext: {}
    # Container resource configuration.
    resources:
      requests:
        # The requested memory for the OpenLDAP container.
        memory: 32Mi
        # The requested cpu for the OpenLDAP container.
        cpu: 50m
      limits:
        # The memory limit for the OpenLDAP container.
        memory: 64Mi
        # The cpu limit for the OpenLDAP container.
        cpu: 100m
    # Service configuration.
    service:
      # Service type (ClusterIP, NodePort, ...).
      type: NodePort
      # If type == NodePort set the node port explicitly instead of having it being auto-assigned.
      nodePorts:
        ldap: ~
    # Data persistence configuration.
    persistence:
      # Enable data persistence on a physical volume (true, false).
      enabled: false
      # Storage class to be used.
      storageClassName: ~
      # Volume access mode (ReadWriteOnce, ReadWriteMany, ReadOnlyMany, ReadWriteOncePod).
      accessModes:
        - ReadWriteOnce
      # Volume capacity.
      size: 1Gi
      # Map of annotations to add to the volume claim.
      annotations: {}
    # Existing secret for providing LDAP credentials. Must contain the values:
    # LDAP_ADMIN_PASSWORD <-- Password of LDAP admin user.
    # LDAP_BINDDN_PASSWORD <-- Password of LDAP binding user (bindDn).
    existingSecret: ~
    # Additional volume mounts for the OpenLDAP container.
    extraVolumeMounts: []
    # Additional volumes for the deployment.
    extraVolumes: []
    # Configuration of sidecar containers running next to the OpenLDAP container.
    sidecars: []
  # LDAP host, only relevant if ldap.embedded.enabled == false.
  host: tachydromos-openldap
  # LDAP port, only relevant if ldap.embedded.enabled == false.
  port: 389
  # LDAP root DN.
  rootDn: dc=tachydromos,dc=org
  # LDAP user search base. Will be rendered as "userSearchBase,rootDn", e.g. ou=users,dc=tachydromos,dc=org.
  userSearchBase: ou=users
  # LDAP domain search base. Will be rendered as "domainSearchBase,rootDn", e.g. ou=domains,dc=tachydromos,dc=org.
  domainSearchBase: ou=domains
  # LDAP admin username.
  adminUsername: admin
  # LDAP admin username attribute type, e.g. cn, mail, uid.
  adminAttributeType: cn
  # LDAP username for binding (bindDn).
  binddnUsername: reader
  # LDAP bindDn attribute type, e.g. cn, mail, uid.
  binddnAttributeType: cn
  # Existing secret for providing LDAP credentials. Must contain the following data:
  # secrets: |
  #   ldapBinddnPassword <-- Password of LDAP binding user (bindDn). If ldap.embedded.existingSecret is defined it must be identical to the value of LDAP_BINDDN_PASSWORD.
  existingSecret: ~

database:
  embedded:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/postgresql
      tag: 16.0.0
      pullPolicy: IfNotPresent
    podAnnotations: {}
    podSecurityContext: {}
    resources:
      requests:
        memory: 256Mi
        cpu: 200m
      limits:
        memory: 512Mi
        cpu: 1000m
    service:
      type: NodePort
      nodePorts:
        psql: ""
    persistence:
      enabled: false
      storageClassName: longhorn
      accessModes:
        - ReadWriteOnce
      size: 1Gi
      annotations:
        helm.sh/resource-policy: keep
    extraVolumeMounts: []
    extraVolumes: []
    sidecars: []
  host: tachydromos-postgresql
  port: 5432
  database: sogo
  username: pgsogo
  existingSecret: ~

postfix:
  image:
    registry: docker.io
    repository: olivergregorius/postfix
    tag: 3.8.2-alpha
    pullPolicy: Always
  replicas: 1
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    requests:
      memory: 32Mi
      cpu: 50m
    limits:
      memory: 64Mi
      cpu: 100m
  service:
    type: NodePort
    nodePorts:
      smtp: ""
      submission: ""
  extraVolumeMounts: []
  extraVolumes: []
  sidecars: []
  enableProxyProtocol: true
  heloWhitelist: ""
  postscreenWhitelist: ""
  ptrWhitelist: ""

dovecot:
  image:
    registry: docker.io
    repository: olivergregorius/dovecot
    tag: 2.3.20-alpha
    pullPolicy: Always
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    requests:
      memory: 32Mi
      cpu: 50m
    limits:
      memory: 64Mi
      cpu: 100m
  persistence:
    enabled: false
    storageClassName: longhorn
    accessModes:
      - ReadWriteOnce
    size: 1Gi
    annotations:
      helm.sh/resource-policy: keep
  extraVolumeMounts: []
  extraVolumes: []
  sidecars: []
  postmasterEmail: postmaster@example.org
  superuserUsername: sysmail@example.org
  existingSecret: ~

rspamd:
  image:
    registry: docker.io
    repository: olivergregorius/rspamd
    tag: 3.6.0-alpha
    pullPolicy: Always
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 1000m
  service:
    type: ClusterIP
    nodePorts:
      milter: ""
      webinterface: ""
  persistence:
    enabled: false
    storageClassName: longhorn
    accessModes:
      - ReadWriteOnce
    size: 1Gi
    annotations:
      helm.sh/resource-policy: keep
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: zerossl-production
    hostname: rspamd.testmail.gregorius.tech
    paths:
      - path: /
        serviceName: rspamd
        servicePort: 11334
    secretName: tachydromos-certificate-rspamd
  extraVolumeMounts: []
  extraVolumes: []
  sidecars: []
  dkimSelector: "2023"
  existingSecret: ~
  redis:
    image:
      registry: docker.io
      repository: redis
      tag: 7.2.1
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: 32Mi
        cpu: 50m
      limits:
        memory: 64Mi
        cpu: 100m

sogo:
  image:
    registry: docker.io
    repository: olivergregorius/sogo
    tag: 5.9.0-alpha
    pullPolicy: Always
  replicas: 1
  podAnnotations: {}
  podSecurityContext:
    fsGroup: 999
    fsGroupChangePolicy: OnRootMismatch
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1.5Gi
      cpu: 500m
  service:
    type: ClusterIP
    nodePorts:
      http: ""
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: zerossl-production
      nginx.ingress.kubernetes.io/app-root: /SOGo
      nginx.ingress.kubernetes.io/proxy-body-size: 16M
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "64"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "512k"
    hostname: ~
    paths:
      - path: /
        serviceName: sogo
        servicePort: 8080
    secretName: tachydromos-certificate
  extraVolumeMounts: []
  extraVolumes: []
  sidecars: []
  nginx:
    image:
      registry: docker.io
      repository: nginx
      tag: 1.25.2
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: 32Mi
        cpu: 50m
      limits:
        memory: 64Mi
        cpu: 100m
  memcached:
    image:
      registry: docker.io
      repository: memcached
      tag: 1.6.21
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: 32Mi
        cpu: 50m
      limits:
        memory: 64Mi
        cpu: 100m

nodeSelector: {}
affinity: {}
tolerations: {}
